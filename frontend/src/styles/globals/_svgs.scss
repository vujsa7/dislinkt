@use "sass:math";

$dislinkt-logo: '<svg width="34" height="34" viewBox="0 0 34 34" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M2.97237e-06 -3.8147e-06L0 34L26.52 34L9.52 16.9529L26.52 -1.49625e-06L2.97237e-06 -3.8147e-06Z" fill="#004495" fill-opacity="0.8"/><path d="M34 -3.8147e-06L34 34L7.48 34L24.48 16.9529L7.48 -6.13315e-06L34 -3.8147e-06Z" fill="#5603AD" fill-opacity="0.8"/></svg>';
$back-arrow: '<svg width="29" height="8" viewBox="0 0 29 8" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M28 4.5C28.2761 4.5 28.5 4.27614 28.5 4C28.5 3.72386 28.2761 3.5 28 3.5L28 4.5ZM0.646444 3.64644C0.451183 3.84171 0.451183 4.15829 0.646444 4.35355L3.82842 7.53553C4.02369 7.73079 4.34027 7.73079 4.53553 7.53553C4.73079 7.34027 4.73079 7.02369 4.53553 6.82843L1.70711 4L4.53553 1.17157C4.7308 0.976309 4.7308 0.659726 4.53553 0.464464C4.34027 0.269202 4.02369 0.269202 3.82842 0.464464L0.646444 3.64644ZM28 3.5L0.999998 3.5L0.999998 4.5L28 4.5L28 3.5Z" fill="#084B83"/></svg>';
$navbar-menu: '<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M4 18H20C20.55 18 21 17.55 21 17C21 16.45 20.55 16 20 16H4C3.45 16 3 16.45 3 17C3 17.55 3.45 18 4 18ZM4 13H20C20.55 13 21 12.55 21 12C21 11.45 20.55 11 20 11H4C3.45 11 3 11.45 3 12C3 12.55 3.45 13 4 13ZM3 7C3 7.55 3.45 8 4 8H20C20.55 8 21 7.55 21 7C21 6.45 20.55 6 20 6H4C3.45 6 3 6.45 3 7Z" fill="#084B83"/></svg>';
$star: '<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M12 17.27L16.15 19.78C16.91 20.24 17.84 19.56 17.64 18.7L16.54 13.98L20.21 10.8C20.88 10.22 20.52 9.12001 19.64 9.05001L14.81 8.64001L12.92 4.18001C12.58 3.37001 11.42 3.37001 11.08 4.18001L9.19001 8.63001L4.36001 9.04001C3.48001 9.11001 3.12001 10.21 3.79001 10.79L7.46001 13.97L6.36001 18.69C6.16001 19.55 7.09001 20.23 7.85001 19.77L12 17.27Z" fill="#4BB3FD"/></svg>';
$edit: '<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M3 17.46V20.5C3 20.78 3.22 21 3.5 21H6.54C6.67 21 6.8 20.95 6.89 20.85L17.81 9.94L14.06 6.19L3.15 17.1C3.05 17.2 3 17.32 3 17.46ZM20.71 7.04C21.1 6.65 21.1 6.02 20.71 5.63L18.37 3.29C17.98 2.9 17.35 2.9 16.96 3.29L15.13 5.12L18.88 8.87L20.71 7.04Z" fill="#5603AD"/></svg>';
$edit-grey: '<svg width="14" height="14" viewBox="0 0 14 14" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M1.75 10.185V11.9583C1.75 12.1217 1.87833 12.25 2.04167 12.25H3.815C3.89083 12.25 3.96667 12.2208 4.01917 12.1625L10.3892 5.79833L8.20167 3.61083L1.8375 9.97499C1.77917 10.0333 1.75 10.1033 1.75 10.185ZM12.0808 4.10666C12.3083 3.87916 12.3083 3.51166 12.0808 3.28416L10.7158 1.91916C10.4883 1.69166 10.1208 1.69166 9.89333 1.91916L8.82583 2.98666L11.0133 5.17416L12.0808 4.10666V4.10666Z" fill="#A2A2A2"/></svg>';
$delete: '<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M6 19C6 20.1 6.9 21 8 21H16C17.1 21 18 20.1 18 19V9C18 7.9 17.1 7 16 7H8C6.9 7 6 7.9 6 9V19ZM18 4H15.5L14.79 3.29C14.61 3.11 14.35 3 14.09 3H9.91C9.65 3 9.39 3.11 9.21 3.29L8.5 4H6C5.45 4 5 4.45 5 5C5 5.55 5.45 6 6 6H18C18.55 6 19 5.55 19 5C19 4.45 18.55 4 18 4Z" fill="#A2A2A2"/></svg>';
$close: '<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">s<path d="M18.3 5.71C17.91 5.32 17.28 5.32 16.89 5.71L12 10.59L7.10997 5.7C6.71997 5.31 6.08997 5.31 5.69997 5.7C5.30997 6.09 5.30997 6.72 5.69997 7.11L10.59 12L5.69997 16.89C5.30997 17.28 5.30997 17.91 5.69997 18.3C6.08997 18.69 6.71997 18.69 7.10997 18.3L12 13.41L16.89 18.3C17.28 18.69 17.91 18.69 18.3 18.3C18.69 17.91 18.69 17.28 18.3 16.89L13.41 12L18.3 7.11C18.68 6.73 18.68 6.09 18.3 5.71V5.71Z" fill="#A2A2A2"/></svg>';
$chat: '<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M20 6H19V14C19 14.55 18.55 15 18 15H6V16C6 17.1 6.9 18 8 18H18L22 22V8C22 6.9 21.1 6 20 6ZM17 11V4C17 2.9 16.1 2 15 2H4C2.9 2 2 2.9 2 4V17L6 13H15C16.1 13 17 12.1 17 11Z" fill="#5603AD"/></svg>';
$checkmark: '<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M8.99989 16.17L5.52989 12.7C5.13989 12.31 4.50989 12.31 4.11989 12.7C3.72989 13.09 3.72989 13.72 4.11989 14.11L8.29989 18.29C8.68989 18.68 9.31989 18.68 9.70989 18.29L20.2899 7.71001C20.6799 7.32001 20.6799 6.69001 20.2899 6.30001C19.8999 5.91001 19.2699 5.91001 18.8799 6.30001L8.99989 16.17Z" fill="white"/></svg>';
$camera: '<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M3 8C3 8.55 3.45 9 4 9C4.55 9 5 8.55 5 8V6H7C7.55 6 8 5.55 8 5C8 4.45 7.55 4 7 4H5V2C5 1.45 4.55 1 4 1C3.45 1 3 1.45 3 2V4H1C0.45 4 0 4.45 0 5C0 5.55 0.45 6 1 6H3V8Z" fill="white"/><path d="M13 17C14.6569 17 16 15.6569 16 14C16 12.3431 14.6569 11 13 11C11.3431 11 10 12.3431 10 14C10 15.6569 11.3431 17 13 17Z" fill="white"/><path d="M21 6H17.83L16.59 4.65C16.22 4.24 15.68 4 15.12 4H8.72C8.89 4.3 9 4.63 9 5C9 6.1 8.1 7 7 7H6V8C6 9.1 5.1 10 4 10C3.63 10 3.3 9.89 3 9.72V20C3 21.1 3.9 22 5 22H21C22.1 22 23 21.1 23 20V8C23 6.9 22.1 6 21 6ZM13 19C10.24 19 8 16.76 8 14C8 11.24 10.24 9 13 9C15.76 9 18 11.24 18 14C18 16.76 15.76 19 13 19Z" fill="white"/></svg>';


@function svg-url($svg) {
    @if not str-index($svg, xmlns) {
      $svg: str-replace($svg, "<svg", '<svg xmlns="http://www.w3.org/2000/svg"');
    }
    //  Chunk up string in order to avoid
    //  "stack level too deep" error
    $encoded: "";
    $slice: 2000;
    $index: 0;
    $loops: ceil(math.div(str-length($svg), $slice));
    @for $i from 1 through $loops {
      $chunk: str-slice($svg, $index, $index + $slice - 1);
      //   Encode
      $chunk: str-replace($chunk, '"', "'");
      $chunk: str-replace($chunk, "%", "%25");
      $chunk: str-replace($chunk, "&", "%26");
      $chunk: str-replace($chunk, "#", "%23");
      $chunk: str-replace($chunk, "{", "%7B");
      $chunk: str-replace($chunk, "}", "%7D");
      $chunk: str-replace($chunk, "<", "%3C");
      $chunk: str-replace($chunk, ">", "%3E");
  
      //
      //    The maybe list
      //
      //    Keep size and compile time down
      //    ... only add on documented fail
      //
      //  $chunk: str-replace($chunk, '|', '%7C');
      //  $chunk: str-replace($chunk, '[', '%5B');
      //  $chunk: str-replace($chunk, ']', '%5D');
      //  $chunk: str-replace($chunk, '^', '%5E');
      //  $chunk: str-replace($chunk, '`', '%60');
      //  $chunk: str-replace($chunk, ';', '%3B');
      //  $chunk: str-replace($chunk, '?', '%3F');
      //  $chunk: str-replace($chunk, ':', '%3A');
      //  $chunk: str-replace($chunk, '@', '%40');
      //  $chunk: str-replace($chunk, '=', '%3D');
  
      $encoded: #{$encoded}#{$chunk};
      $index: $index + $slice;
    }
    @return url("data:image/svg+xml,#{$encoded}");
  }
  
  //  Background svg mixin
  @mixin background-svg($svg) {
    background-image: svg-url($svg);
  }
  
  //  Helper function to replace characters in a string
  @function str-replace($string, $search, $replace: "") {
    $index: str-index($string, $search);
    @return if(
      $index,
      str-slice($string, 1, $index - 1) + $replace +
        str-replace(
          str-slice($string, $index + str-length($search)),
          $search,
          $replace
        ),
      $string
    );
  }